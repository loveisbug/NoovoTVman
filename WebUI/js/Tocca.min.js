(function(doc, win) {
	'use strict';
	if (typeof doc.createEvent !== 'function') return false; // no touch events here
	// helpers
	var useJquery = typeof jQuery !== 'undefined',
		isTouch = !!('ontouchstart' in window) && navigator.userAgent.indexOf('PhantomJS') < 0,
		setListener = function(elm, events, callback) {
			var eventsArray = events.split(' '),
				i = eventsArray.length;

			while (i--) {
				elm.addEventListener(eventsArray[i], callback, false);
			}
		},
		getPointerEvent = function(event) {
			return event.targetTouches ? event.targetTouches[0] : event;
		},
		sendEvent = function(elm, eventName, originalEvent, data) {
			var customEvent = doc.createEvent('Event');

			data = data || {};
			data.x = currX;
			data.y = currY;
			data.distance = data.distance;
			if (useJquery)
				jQuery(elm).trigger(eventName, data);
			else {
				customEvent.originalEvent = originalEvent;
				for (var key in data) {
					customEvent[key] = data[key];
				}
				customEvent.initEvent(eventName, true, true);
				elm.dispatchEvent(customEvent);
			}
		};

	var touchStarted = false, // detect if a touch event is sarted
		swipeTreshold = win.SWIPE_TRESHOLD || 80,
		taptreshold = win.TAP_TRESHOLD || 200,
		precision =  win.TAP_PRECISION / 2 || 60 / 2, // touch events boundaries ( 60px by default )
		tapNum = 0,
		currX, currY, cachedX, cachedY, tapTimer;

	// shall we use it just on the touch devices?
	// by default Tocca.js detects also the mouse events
	isTouch = win.JUST_ON_TOUCH_DEVICES ? true : isTouch;

	//setting the events listeners
	setListener(doc, isTouch ? 'touchstart' : 'mousedown', function(e) {
		var pointer = getPointerEvent(e);
		// caching the current x
		cachedX = currX = pointer.pageX;
		// caching the current y
		cachedY = currY = pointer.pageY;
		// a touch event is detected
		touchStarted = true;
	});
	setListener(doc, isTouch ? 'touchend' : 'mouseup', function(e) {
		touchStarted = false;
	});
	setListener(doc, isTouch ? 'touchmove' : 'mousemove', function(e) {
		var pointer = getPointerEvent(e);
		currX = pointer.pageX;
		currY = pointer.pageY;

		var deltaY = cachedY - currY;
		var deltaX = cachedX - currX;

		sendEvent(e.target, "scroll", e,{
					distance:{
						x:deltaX,
						y:deltaY
					}
		});
	});
}(document, window));